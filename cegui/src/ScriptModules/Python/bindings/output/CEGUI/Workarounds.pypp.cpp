// This file has been generated by Py++.

#include "boost/python.hpp"
#include "generators/include/python_CEGUI.h"
#include "Workarounds.pypp.hpp"

namespace bp = boost::python;

void register_Workarounds_class(){

    { //::CEGUI::Workarounds
        typedef bp::class_< CEGUI::Workarounds > Workarounds_exposer_t;
        Workarounds_exposer_t Workarounds_exposer = Workarounds_exposer_t( "Workarounds" );
        bp::scope Workarounds_scope( Workarounds_exposer );
        { //::CEGUI::Workarounds::PropertyDefinitionBaseMapGet
        
            typedef ::CEGUI::PropertyDefinitionBase * ( *PropertyDefinitionBaseMapGet_function_type )( ::std::map<CEGUI::String, CEGUI::PropertyDefinitionBase*, CEGUI::StringFastLessCompare, std::allocator<std::pair<CEGUI::String const, CEGUI::PropertyDefinitionBase*> > > &,::CEGUI::String const & );
            
            Workarounds_exposer.def( 
                "PropertyDefinitionBaseMapGet"
                , PropertyDefinitionBaseMapGet_function_type( &::CEGUI::Workarounds::PropertyDefinitionBaseMapGet )
                , ( bp::arg("map"), bp::arg("key") )
                , bp::return_value_policy< bp::reference_existing_object >() );
        
        }
        Workarounds_exposer.staticmethod( "PropertyDefinitionBaseMapGet" );
    }

}

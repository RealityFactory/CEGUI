class System // : public EventSet
{
	static System& getSingleton();
	
	Renderer* getRenderer() const;

	void setDefaultFont(string name);
	void setDefaultFont(Font* font);
	
	void signalRedraw();
	bool isRedrawRequested() const;
	//void renderGUI();
	
	Window* setGUISheet(Window* sheet);
	Window* getGUISheet() const;
	
	void setSingleClickTimeout(double timeout);
	void setMultiClickTimeout(double timeout);
	void setMultiClickToleranceAreaSize(const Size& sz);
	double getSingleClickTimeout() const;
	double getMultiClickTimeout() const;
	const Size& getMultiClickToleranceAreaSize() const;
	
	void setDefaultMouseCursor(MouseCursorImage image);
	void setDefaultMouseCursor(const Image* image);
	void setDefaultMouseCursor(string imageset_name, string image_name);
	const Image* getDefaultMouseCursor() const;
	
	Window* getWindowContainingMouse() const;
	
	void executeScriptFile(string filename) const;
	int executeScriptGlobal(string global_name) const;
	void executeScriptString(string lua_string) const;
	
	float getMouseMoveScaling() const;
	void setMouseMoveScaling(float scaling);
	
	void notifyWindowDestroyed(const Window* window);
	
	//unsigned int getSystemKeys() const;
	
	bool injectMouseMove(float dx, float dy);
	bool injectMouseLeaves();
	bool injectMouseButtonDown(MouseButton btn);
	bool injectMouseButtonUp(MouseButton btn);
	bool injectKeyDown(unsigned int keycode);
	bool injectKeyUp(unsigned int keycode);
	bool injectChar(unsigned long code_point);
	bool injectMouseWheelChange(float delta);
	bool injectMousePosition(float x, float y);
	bool injectTimePulse(float timeElapsed);
	

	// EventSet - inheritance crashes
	//////////////////////////////////
	void addEvent(string name);
	void removeEvent(string name);
	void removeAllEvents();
	bool isEventPresent(string name);
	
	void subscribeScriptedEvent @ subscribeEvent(string name, string callback_name);
	void fireEvent(string name, EventArgs& args, string eventnamespace="");
	
	bool isMuted() const;
	void setMutedState(bool setting);
};
